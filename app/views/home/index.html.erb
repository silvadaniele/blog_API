<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

<div id="app">
  {{ message }}
</div>

<div id="app-2">
  <span v-bind:title="message">
    Hover your mouse over me for a few seconds
    to see my dynamically bound title!
  </span>
</div>


<div id="app-3">
  <span v-if="seen">Now you see me</span>
</div>

<div id="app-4">
  <ol>
    <li v-for="todo in todos">
      {{ todo.text }}
    </li>
  </ol>
</div>

<div id="app-5">
  <p>{{ message }}</p>
  <button v-on:click="reverseMessage">Reverse Message</button>
</div>

<div id="app-6">
  <table>
    <tr>
      <th>Titre du Post</th>
      <th>Contenu du Post</th>
    </tr>
    <tr v-for="post in posts">
      <td>{{ post.title }}</td>
      <td>{{ post.body }}</td>
    </tr>
  </table>
  <button v-on:click="refreshPosts">Refresh Posts</button>
</div>

<div id="app-7">
  <table>
    <tr>
      <th>Titre</th>
      <th>Contenu</th>
    </tr>
    <tr v-for="post in posts">
      <td>{{ post.title }}</td>
      <td>{{ post.body }}</td>
    </tr>
  </table>
  <button v-on:click="fetchPosts">Refresh Posts</button>
</div>

<div id="app-8">
  <table>
    <tr>
      <th>Titre</th>
      <th>Contenu</th>
    </tr>
    <tr v-for="post in posts">
      <td>{{ post.title }}</td>
      <td>{{ post.body }}</td>
      <td><button type="button" v-on:click="deletePost(post)">Delete this post</button></td>
    </tr>
  </table>
  <button v-on:click="fetchPosts">Refresh Posts</button>

  <form @submit="createPost">
    <label for="post-title">Titre:</label><br>
    <input type="text" id="post-title" name="post[title]" v-model="title"><br>
    <label for="post-body">Contenu:</label><br>
    <input type="text" id="post-body" name="post[content]" v-model="body"><br><br>
    <button>Create Post</button>
  </form>
  <div>
    {{ title }}<br/>
    {{ body }}
  </div>
</div>


<script>
  var app = new Vue({
    el: '#app',
    data: {
      message: 'Hello Vue!'
    }
  })

  var app2 = new Vue({
    el: '#app-2',
    data: {
      message: 'You loaded this page on ' + new Date().toLocaleString()
    }
  })

  var app3 = new Vue({
    el: '#app-3',
    data: {
      seen: true
    }
  })

  var app4 = new Vue({
    el: '#app-4',
    data: {
      todos: [
        { text: 'Learn JavaScript' },
        { text: 'Learn Vue' },
        { text: 'Build something awesome' }
      ]
    }
  })

  var app5 = new Vue({
    el: '#app-5',
    data: {
      message: 'Hello Vue.js!'
    },
    methods: {
      reverseMessage: function () {
        this.message = this.message.split('').reverse().join('')
      }
    }
  })

  var app6 = new Vue({
    el: '#app-6',
    data: {
      posts: [
        { title: 'Title 1', body: 'Content 1' },
        { title: 'Title 2', body: 'Content 2' },
        { title: 'Title 3', body: 'Content 3' }
      ]
    },
    methods: {
      refreshPosts: function () {
        fetch('http://localhost:3000/posts')
          .then((response) => response.json())
          .then((data) => this.posts = data)
      }
    }
  })

  var app7 = new Vue({
    el: '#app-7',
    data: {
      posts: []
    },
    methods: {
      fetchPosts: async function () {
        var response = await fetch('http://localhost:3000/posts', {method: 'GET'});
        var posts = await response.json();
        this.posts = posts;
      },
    },
    mounted: function(){
      console.log("ça marche");
      this.fetchPosts();
    },
  });



  var app8 = new Vue({
    el: '#app-8',
    data: {
      posts: [],
      title: "",
      body: "",
    },
    methods: {
      fetchPosts: async function () {
        var response = await fetch(
          'http://localhost:3000/posts', {
            method: 'GET',
          }
        );
        var posts = await response.json();
        this.posts = posts;
      },
      createPost: async function (event) {
        event.preventDefault();

        var response = await fetch(
          'http://localhost:3000/posts', {
            method: 'POST',
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              post: {
                title: this.title,
                body: this.body,
              },
            }),
          }
        );
        var post = await response.json();
        this.posts.push(post);
      },
      deletePost: async function (post) {
        var response = await fetch(
          `http://localhost:3000/posts/${post.id}`, {
            method: 'DELETE',
          },
        )
        var post = await response.json();
        var result = this.posts.filter(function(p) {return post.id !== p.id })
        this.posts = result;
      },
    },
    mounted: function(){
      console.log("ça marche!");
      this.fetchPosts();
    },
  });
</script>


const result = words.filter(word => word.length > 6);

var result = words.filter(function(word) { return word.length > 6 })

var result = this.posts.filter(function(p) {return post.id !== p.id })
